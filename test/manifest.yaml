# Kafka
apiVersion: v1
kind: Namespace
metadata:
  name: demeter-kafka 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redpanda
  namespace: demeter-kafka
  labels:
    app: redpanda
spec:
  selector:
    matchLabels:
      app: redpanda
  template:
    metadata:
      labels:
        app: redpanda
    spec:
      containers:
        - name: redpanda
          image: docker.redpanda.com/redpandadata/redpanda:latest
          args:
           - redpanda
           - start
           - --kafka-addr internal://localhost:9092,external://0.0.0.0:19092
           - --advertise-kafka-addr internal://localhost:9092,external://redpanda.demeter-kafka.svc.cluster.local:19092
           - --pandaproxy-addr internal://localhost:8082,external://0.0.0.0:18082
           - --advertise-pandaproxy-addr internal://localhost:8082,external://redpanda.demeter-kafka.svc.cluster.local:18082
           - --schema-registry-addr internal://localhost:8081,external://0.0.0.0:18081
           - --rpc-addr localhost:33145
           - --advertise-rpc-addr localhost:33145
           - --mode dev-container
           - --smp 1
           - --default-log-level=debug

          ports:
            - containerPort: 19092 
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", " rpk topic create events"]
---
apiVersion: v1
kind: Service
metadata:
  name: redpanda 
  namespace: demeter-kafka
  labels:
    app: redpanda
spec:
  selector:
    app: redpanda
  type: ClusterIP
  ports:
    - name: redpanda
      port: 19092 
      targetPort: 19092
      protocol: TCP
---
# Daemon 
apiVersion: v1
kind: Namespace
metadata:
  name: demeter-daemon 
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-rs
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-rs
  namespace: demeter-daemon
automountServiceAccountToken: true
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-rs-binding
  namespace: demeter-daemon
subjects:
  - kind: ServiceAccount
    namespace: demeter-daemon
    name: kube-rs
  - kind: Group
    name: system:serviceaccounts
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: kube-rs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
data:
  daemon.toml: |
    topic = "events"
    [kafka]
    "bootstrap.servers" = "redpanda.demeter-kafka.svc.cluster.local:19092"
    "group.id"= "demeter-daemon"
kind: ConfigMap
metadata:
  name: daemon-config
  namespace: demeter-daemon 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: daemon
  namespace: demeter-daemon
  labels:
    app: daemon
spec:
  selector:
    matchLabels:
      app: daemon
  template:
    metadata:
      labels:
        app: daemon
    spec:
      containers:
        - name: daemon
          image: daemon:1.0
          env:
            - name: DAEMON_CONFIG 
              value: "/fabric/daemon.toml"
          volumeMounts:
            - name: daemon-vol
              mountPath: /fabric 
      volumes:
        - name: daemon-vol
          configMap:
            name: daemon-config
---

# RPC
apiVersion: v1
kind: Namespace
metadata:
  name: demeter-rpc 
---
apiVersion: v1
data:
  rpc.toml: |
    addr="0.0.0.0:80"
    db_path="test.db"
    secret="fabric@txpipe"
    topic = "events"

    [kafka_producer]
    "bootstrap.servers" = "redpanda.demeter-kafka.svc.cluster.local:19092"

    [kafka_consumer]
    "bootstrap.servers" = "redpanda.demeter-kafka.svc.cluster.local:19092"
    "group.id"= "rpc"

    [auth]
    url="https://dev-dflg0ssi.us.auth0.com"
kind: ConfigMap
metadata:
  name: rpc-config
  namespace: demeter-rpc 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc
  namespace: demeter-rpc
  labels:
    app: rpc
spec:
  selector:
    matchLabels:
      app: rpc
  template:
    metadata:
      labels:
        app: rpc
    spec:
      containers:
        - name: rpc
          image: rpc:1.0
          ports:
            - containerPort: 80
          env:
            - name: RPC_CONFIG 
              value: "/fabric/rpc.toml"
          volumeMounts:
            - name: rpc-vol
              mountPath: /fabric 
      volumes:
        - name: rpc-vol
          configMap:
            name: rpc-config
---
apiVersion: v1
kind: Service
metadata:
  name: rpc 
  namespace: demeter-rpc
  labels:
    app: rpc
spec:
  selector:
    app: rpc
  type: NodePort
  ports:
    - name: rpc
      port: 80
      targetPort: 80
      nodePort: 30950
      protocol: TCP
