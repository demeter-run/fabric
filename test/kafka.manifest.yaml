# Kafka
apiVersion: v1
kind: Namespace
metadata:
  name: demeter-kafka 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redpanda
  namespace: demeter-kafka
  labels:
    app: redpanda
spec:
  selector:
    matchLabels:
      app: redpanda
  template:
    metadata:
      labels:
        app: redpanda
    spec:
      containers:
        - name: redpanda
          image: docker.redpanda.com/redpandadata/redpanda:latest
          args:
           - redpanda
           - start
           - --kafka-addr internal://localhost:9092,external://0.0.0.0:19092
           - --advertise-kafka-addr internal://localhost:9092,external://redpanda.demeter-kafka.svc.cluster.local:19092
           - --pandaproxy-addr internal://localhost:8082,external://0.0.0.0:18082
           - --advertise-pandaproxy-addr internal://localhost:8082,external://redpanda.demeter-kafka.svc.cluster.local:18082
           - --schema-registry-addr internal://localhost:8081,external://0.0.0.0:18081
           - --rpc-addr localhost:33145
           - --advertise-rpc-addr localhost:33145
           - --mode dev-container
           - --smp 1
           - --default-log-level=debug

          ports:
            - containerPort: 19092 
---
apiVersion: v1
kind: Service
metadata:
  name: redpanda 
  namespace: demeter-kafka
  labels:
    app: redpanda
spec:
  selector:
    app: redpanda
  type: ClusterIP
  ports:
    - name: redpanda
      port: 19092 
      targetPort: 19092
      protocol: TCP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-topic
  namespace: demeter-kafka
spec:
  template:
    spec:
      containers:
        - name: create-topic
          image: docker.redpanda.com/redpandadata/redpanda:latest
          command: ["/bin/sh", "-c", "rpk topic create events"]
          env:
            - name: REDPANDA_BROKERS
              value: "redpanda.demeter-kafka.svc.cluster.local:19092"
      restartPolicy: OnFailure
